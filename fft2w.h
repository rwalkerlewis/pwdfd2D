/* This file is automatically generated. DO NOT EDIT! */

#ifndef _fft2w_h
#define _fft2w_h


int fft2_init(bool cmplx1        /* if complex transform */,
	      int pad1           /* padding on the first axis */,
	      int nx,   int ny   /* input data size */, 
	      int *nx2, int *ny2 /* padded data size */);
/*< initialize >*/


void fft2(float *inp      /* [n1*n2] */, 
	  sf_complex *out /* [nk*n2] */);
/*< 2-D FFT >*/


void ifft2_allocate(sf_complex *inp /* [nk*n2] */);
/*< allocate inverse transform >*/


void ifft2(float *out      /* [n1*n2] */, 
	   sf_complex *inp /* [nk*n2] */);
/*< 2-D inverse FFT >*/


void fft2_finalize();
/*< clean up fftw >*/

#endif
